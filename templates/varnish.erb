# file managed by puppet
#
# Configuration file for varnish
#
# /etc/init.d/varnish expects the variables $DAEMON_OPTS, $NFILES and $MEMLOCK
# to be set from this shell script fragment.
#

# Should we start varnishd at boot?  Set to "yes" to enable.
START=yes

# Maximum number of open files (for ulimit -n)
NFILES="<%= nfiles %>"
ulimit -n $NFILES

# Maximum locked memory size (for ulimit -l)
# Used for locking the shared memory log in memory.  If you increase log size,
# you need to increase this number as well
MEMLOCK="<%= memlock %>"
ulimit -l $MEMLOCK

# Default varnish instance name is the local nodename.  Can be overridden with
# the -n switch, to have more instances on a single server.
INSTANCE="<%= name %>"

# Maximum size of corefile (for ulimit -c). Default in Fedora is 0
# DAEMON_COREFILE_LIMIT="unlimited"
DAEMON_COREFILE_LIMIT="<%= corelimit %>"
ulimit -S -c $DAEMON_COREFILE_LIMIT


## Alternative 4, Do It Yourself
#

DAEMON_OPTS="-n <%= name %> \
             -u varnish -g varnish \
             -a <%= address.join(',') %> \
             -T <%= admin_address %>:<%= admin_port %> \
<% if storage == [] -%>
             -s file,/var/lib/varnish/<%= name %>/varnish_storage.bin,1G \
<% else -%>
<% storage.each do |storage| -%>
             -s <%= storage %> \
<% end -%>
<% end -%>
<% if vcl_file or vcl_content -%>
             -f /etc/varnish/<%= name %>.vcl \
<% end -%>
<% if backend != false -%>
             -b <%= backend %> \
<% end -%>
<% params.each do |param| -%>
             -p <%= param %> \
<% end -%>
"

